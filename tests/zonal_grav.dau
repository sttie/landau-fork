#lang landau
const int NGRAV = 7 # -, -, C20, -, C40, -, C60

real[3] zonal_grav (real x, real y, real z, real[NGRAV] zonal_C)
{
  x ' x = 1.0
  y ' y = 1.0
  z ' z = 1.0
  
  real r = sqrt(x * x + y * y + z * z)
  real[NGRAV] v_0

  v_0[0] = 1 / r                       # V00 = 1 / r
  v_0[1] = sqrt(3.0) * z / (r * r * r) # V10 = sqrt(3) z / r^3 

  for n = [2 : NGRAV]
  {
     v_0[n] = sqrt((2.0 * n - 1) * (2 * n + 1) / (n * n)) * v_0[n - 1] * z / (r * r) -
              sqrt((n - 1.0) * (n - 1) * (2 * n + 1) / (n * n * (2 * n - 3))) * v_0[n - 2] / (r * r)
  }

  real potential = 0
  
  for n = [2 : NGRAV]
  {
     potential = potential + v_0[n] * zonal_C[n]
  }
  
  zonal_grav[0] = potential ' x
  zonal_grav[1] = potential ' y
  zonal_grav[2] = potential ' z
}

real[3] zonal_grav_2 (real x, real y, real z, real[NGRAV] zonal_C)
{
  real r2 = x * x + y * y + z * z
  real r = sqrt(r2)
  real r3 = r * r2
  real r4 = r2 * r2
  real r5 = r4 * r
  
  real[NGRAV] v_0
  real[NGRAV] dv_0_dx
  real[NGRAV] dv_0_dy
  real[NGRAV] dv_0_dz

  v_0[0] = 1 / r                 # V00 = 1 / r
  v_0[1] = sqrt(3.0) * z / r3    # V10 = sqrt(3) z / r^3 

  dv_0_dx[0] = -x / r3
  dv_0_dy[0] = -y / r3
  dv_0_dz[0] = -z / r3

  dv_0_dx[1] = sqrt(3.0) * -3 * z * x / r5
  dv_0_dy[1] = sqrt(3.0) * -3 * z * y / r5
  dv_0_dz[1] = sqrt(3.0) * (1 / r3 - 3 * z * z / r5)
  
  real coef1
  real coef2
  for n = [2 : NGRAV]
  {
     coef1 = sqrt((2.0 * n - 1) * (2 * n + 1) / (n * n))
     coef2 = sqrt((n - 1.0) * (n - 1) * (2 * n + 1) / (n * n * (2 * n - 3)))
     
     v_0[n] = coef1 * v_0[n - 1] * z / r2 - coef2 * v_0[n - 2] / r2
     
     dv_0_dx[n] = coef1 * z * (dv_0_dx[n - 1] / r2 - v_0[n - 1] * 2 * x / r4) -
                  coef2 *     (dv_0_dx[n - 2] / r2 - v_0[n - 2] * 2 * x / r4)
     dv_0_dy[n] = coef1 * z * (dv_0_dy[n - 1] / r2 - v_0[n - 1] * 2 * y / r4) -
                  coef2 *     (dv_0_dy[n - 2] / r2 - v_0[n - 2] * 2 * y / r4)
     dv_0_dz[n] = coef1 * (dv_0_dz[n - 1] * z / r2 + v_0[n - 1] * (1 / r2 - 2 * z * z / r4)) -
                  coef2 * (dv_0_dz[n - 2] / r2 - v_0[n - 2] * 2 * z / r4)
  }

  real dpotential_dx = 0
  real dpotential_dy = 0
  real dpotential_dz = 0
  
  for n = [2 : NGRAV]
  {
     dpotential_dx = dpotential_dx + dv_0_dx[n] * zonal_C[n]
     dpotential_dy = dpotential_dy + dv_0_dy[n] * zonal_C[n]
     dpotential_dz = dpotential_dz + dv_0_dz[n] * zonal_C[n]
  }
  
  zonal_grav_2[0] = dpotential_dx
  zonal_grav_2[1] = dpotential_dy
  zonal_grav_2[2] = dpotential_dz
}

